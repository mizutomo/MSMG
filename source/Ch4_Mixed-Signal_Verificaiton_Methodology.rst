===========================================
Ch.4 Mixed-Signal Verification Methodology
===========================================

  * 以前は、アナログ回路とデジタル回路が完全に分かれていたので、アナログ回路の検証とMixed-Signalの検証はそれぞれ独立に行うことができた。現在では、アナログ回路とデジタル回路が密に結合して、さらに様々な階層にもまたがっているため、独立に検証することはできなくなった。この章では、Mixed-Signalのシミュレーションやアナログ機能記述を用いたチップレベルのシミュレーションにデジタルの検証技術であるアサーションやカバレッジ駆動検証手法を活用する方法を説明する。目標となるカバレッジを達成するためには、検証プランを事前に作成して、テストベンチの開発に使用しなければならない。また、Mixed-Signal回路における低電力の検証でも、アナログとデジタルの界面で特別な扱いをする必要がある。


Overview
=================

  * 近年の微細化の影響で、アナログ回路設計者もデジタル回路を取り入れる必要がある。特に微細プロセスによる変動を補正するキャリブレーション回路の搭載が必要となっている。つまり、現在のアナログ回路は、高精度なアナログブロックは、Mixed-Signalで構成されている。さらに、デジタル回路においてもタイミングやスキュー、電力の問題を考えると、ピュアなデジタル回路と言うよりは、Mixed-Signalの回路である、と言える。結局、今日の大半のSoCは、Mixed-Signalであり、検証の課題となっている。主な課題は、アナログ(ボトムアップ)とデジタル(トップダウン)で使用するツールや方法論が異なっていることである。すなわち、Mixed-Signalの検証のためには、アナログとデジタルの間に橋を架ける必要がある。

  * 別の問題として、検証ツールにおけるスループットの問題もある。SPICEにしろFast-SPICEにしろ、デジタルのシミュレータに比べると、数桁も遅い(エミュレータやハードウェアアクセラレータを用いても、まだ遅いでしょう)。DAC2011のパネルディスカッションでは、アナログ回路設計と検証のデジタル化、構造化、トップダウン化が議論となった。その中で、アナログ・Mixed-Signalに対しても、検証プランツールを導入し、アサーション検証、メトリックドリブン検証、自律型テストベンチを実現するためのUVMの導入が必要である、という結論となった。また、シミュレーションスループットの問題を解決するために、Verilog-A, Verilog-AMSやイベントドリブンによる動作が可能なRNM技術を用いた機能モデルによる検証手法に変えなければならない。

  * アナログ設計者は、デジタル回路のようにCPF/UPFを用いて、アナログ回路でも電力を管理したいと考えているが、これには3つの課題がある。デジタルとアナログの境界で信号を伝達するには、Logic→Electricalの変換(その逆も)を行わなければならないが、これには、その時々の電源の状態に依存している。シミュレータは、動的な電源レベルの変動や、シャットオフ、アイソレーションの条件をアナログとデジタルで同時に満たすことができるように、検証ツールは信号の相互変換を行わなければいけない。Mixed-Signalの検証がメインストリームに成るためには、新しいツール・手法が導入・開発され、満足なレベルまで熟成されないといけない。また、Mixed-Signalの検証に合うように形式手法も作りなおされる必要がある。以下では、これらの課題について述べる。


Mixed-Signal Simulation as the Fundation for Verification
--------------------------------------------------------------------

  * アナログの検証では、形式検証やエミュレーション、ハードウェアアクセラレーションは、まだまだ十分なレベルではない。そのため、Mixed-Signalの検証では、シミュレーションベースの動的な検証手法に頼らざるを得ない。これらの手法に共通している点は、コ・シミュレーションを使用するか、シングルカーネルのシミュレータを使用するか、ということである。コ・シミュレーションは、2つのネットリストを用い、それぞれを別の(UNIX上では、別々のプロセスが走る)シミュレータにより解析し、それぞれのエンジンはIPC(プロセス間通信)により通信される。それに対して、シングルカーネルシミュレータは、UNIX上で一つのプロセスとして実行され、より高度な同期機構と効率的なデータ交換により、エンジン/アルゴリズム間のデータ受け渡しを可能にしたものである。

  * 設計者は、抽象度の高いレベル(Mathworks社のMATLABを使用することが多い)から、HDLとSPICEを組み合わせた低いレベルまで、様々なレベルを組み合わせてシミュレーションを行うことができる。各ブロックは、抽象度の高いレベル(例えば、WrealベースのVerilogモデル)や中間のレベル(Verilog-AMSモジュール)、低いレベル(回路図から生成されたSPICEネットリスト)でモデル化される。検証の際は、各抽象度のモデルを組み合わせてたり、ミックスさせたり、また市松模様のように絡み合わせることができる。様々な抽象度を使い分けることで、フォーカスするシミュレーションのターゲットを切り替えることができる。例えば、ブロックレベルに注目したり、レーンベースでシミュレーションを行ったり、マクロ単位や最後はフルチップのシミュレーションも可能である。抽象度を組み合わせた検証を行うことで、機能の確認や性能がスペックを満たしているかどうかの確認が可能となる。

  * Mixed-Signalのシミュレーション技術は、今後、高速なイベントドリブン/システムレベルの手法(両方とのデジタル部の解析手法)と、遅いが高精度なアナログのアプローチの融合を模索することになるだろう。アナログシミュレーションのアプローチは、常微分方程式の構築と解の探索に基づくものである。また、抽象度では、モデルベースとSPICEネットリストベースでモデル化する方法があり、どの抽象度でモデル化を行うかで、解くべき方程式の数が変わってくる。また、アナログの機能モデルを記述する際に、効率的にシミュレーションすることを考慮しないで記述した場合、SPICEベースのモデルとほとんど同じSim時間になることがある(それでも、遅くなることはないが)。また、リントツールやモデル作成支援ツールが急速に広まりつつあるので、より効率的にモデルの記述が可能となっている。


Design Partitioning, Simulation Planning, Regressions
--------------------------------------------------------------------

  * トップダウン設計を実現するためには、計画を重視することと、モデルのスループット(シミュレーション?)を上げることが必要である。トップダウン設計の中心になる考え方は、カバレッジ率とシミュレーションスピードを両立した楽観的な検証ストラテジを見つけることである。設計の仕様書から、どのブロックを高抽象度のモデルにすべきか、また、どのブロックをトランジスタレベルで検証すべきか、を見つけることができる。そこには、設計ブロックの分割とシミュレーション計画が中心的な考えとなる。また、プロジェクトの開始段階で、設計が安定なシステムになることは、ほとんどないため、シミュレーション計画を構築する際には、レグレッションテストについても考慮する必要がる。

  * 検証プランの構築には、通常動的な検証手法が用いられるが、検証ツールが必要十分なカバレッジを達成できるように、綿密な検証プランを作成する必要がある。ここでいう、検証プランは、実装のためのプランとは異なる。デジタル/SoCの設計チームでは、このようなプランを作成するために、専用の検証プランニングツールが用いられる。すなわち、検証プランは、実装のプラン(実際のテストベンチ)と共に開発される。デジタルの検証ツールでは、シミュレーション結果から、実装プランと目標の検証プランを比較することで、どの程度カバレッジが達成できたかのレポートを生成することができる。

  * 典型的には、アナログ部の検証プランの作成には、スプレッドシートが用いられるなど、デジタルよりもアドホックなものである。しかしながら、スプレッドシートでは、実際のシミュレーション結果からプランに対して、自動的に結果を反映させることができない。Mixed-Signal向けの検証ツールでは、ブロックごとにどの抽象度のモデルを用いるか、デザインをどのように分割するか、どうやってシミュレーションを走らせるか、を選択できるようなツールになっている必要がある。現状では、このようなツールがないため、ギャップを埋めるために、ユーザがそれぞれのスクリプトを用いている。今後は、UVM-MSのような手法を導入して、デジタルの高度な検証をアナログ/Mixed-Signalにも適用していかなければならない。


Assertion-based Verification
--------------------------------------------------------------------

  * 複数の言語やツールでアサーションがデジタル回路の複雑な状態空間を扱えるようになったため、デジタル設計・検証ともに、アサーションベース検証が広く用いられるようになった。PSLやSVAがVerilog-AMSやWrealベースのVerilogで使用できるようになれば、Mixed-Signalの設計者にもアサーションベース設計が利用できるようになる。現在、それぞれの標準化団体によって、この拡張が行われている。UVM-MSでは、今やアナログ信号値に対してのモニタリング機構やチェック機構がサポートされており、標準的なものになりつつある。いくつかのベンダでは、Verilog-AMSに電圧値のようなアナログ信号を取り扱えるようにしたPSLとSVAをサポートしつつある。

  * アサーションは、仕様の確認と設計の確からしさの両面を実行時に確認することができる。すなわち、実行時には、エラー発生箇所に近いところに配置したモニタの機能を持ち、エラー情報とカバレッジ情報の両方を出力することができる。アサーションを使用することで、検証を早くスタートすることができ、また、設計エンジニアと検証エンジニアがバグを早く検出し、取り除くことができる。また、設計者は設計意図をコードに埋め込むことで、後の統合工程での問題を最小化することができる。Mixed-Signalの設計と検証において、下記のメリットを取り込むことで、アサーションのメリットを享受することができる。

    * アサーションにより設計意図をデザインに組み込むことができる。
    * バグの近くで、アサーションを発火させられることができるので、バグの特定と除去が速くなる。
    * ファンクションカバレッジの取得が可能になる。

  * これからMixed-Signalの設計はより複雑になってくるため、アサーションベース設計は、ピュアなデジタル設計よりもますます重要となる。


Coverage Measurements
--------------------------------------------------------------------


