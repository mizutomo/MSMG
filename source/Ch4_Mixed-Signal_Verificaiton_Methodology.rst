===========================================
Ch.4 Mixed-Signal Verification Methodology
===========================================

  * 以前は、アナログ回路とデジタル回路が完全に分かれていたので、アナログ回路の検証とMixed-Signalの検証はそれぞれ独立に行うことができた。現在では、アナログ回路とデジタル回路が密に結合して、さらに様々な階層にもまたがっているため、独立に検証することはできなくなった。この章では、Mixed-Signalのシミュレーションやアナログ機能記述を用いたチップレベルのシミュレーションにデジタルの検証技術であるアサーションやカバレッジ駆動検証手法を活用する方法を説明する。目標となるカバレッジを達成するためには、検証プランを事前に作成して、テストベンチの開発に使用しなければならない。また、Mixed-Signal回路における低電力の検証でも、アナログとデジタルの界面で特別な扱いをする必要がある。


Overview
=================

  * 近年の微細化の影響で、アナログ回路設計者もデジタル回路を取り入れる必要がある。特に微細プロセスによる変動を補正するキャリブレーション回路の搭載が必要となっている。つまり、現在のアナログ回路は、高精度なアナログブロックは、Mixed-Signalで構成されている。さらに、デジタル回路においてもタイミングやスキュー、電力の問題を考えると、ピュアなデジタル回路と言うよりは、Mixed-Signalの回路である、と言える。結局、今日の大半のSoCは、Mixed-Signalであり、検証の課題となっている。主な課題は、アナログ(ボトムアップ)とデジタル(トップダウン)で使用するツールや方法論が異なっていることである。すなわち、Mixed-Signalの検証のためには、アナログとデジタルの間に橋を架ける必要がある。

  * 別の問題として、検証ツールにおけるスループットの問題もある。SPICEにしろFast-SPICEにしろ、デジタルのシミュレータに比べると、数桁も遅い(エミュレータやハードウェアアクセラレータを用いても、まだ遅いでしょう)。DAC2011のパネルディスカッションでは、アナログ回路設計と検証のデジタル化、構造化、トップダウン化が議論となった。その中で、アナログ・Mixed-Signalに対しても、検証プランツールを導入し、アサーション検証、メトリックドリブン検証、自律型テストベンチを実現するためのUVMの導入が必要である、という結論となった。また、シミュレーションスループットの問題を解決するために、Verilog-A, Verilog-AMSやイベントドリブンによる動作が可能なRNM技術を用いた機能モデルによる検証手法に変えなければならない。

  * アナログ設計者は、デジタル回路のようにCPF/UPFを用いて、アナログ回路でも電力を管理したいと考えているが、これには3つの課題がある。デジタルとアナログの境界で信号を伝達するには、Logic→Electricalの変換(その逆も)を行わなければならないが、これには、その時々の電源の状態に依存している。シミュレータは、動的な電源レベルの変動や、シャットオフ、アイソレーションの条件をアナログとデジタルで同時に満たすことができるように、検証ツールは信号の相互変換を行わなければいけない。Mixed-Signalの検証がメインストリームに成るためには、新しいツール・手法が導入・開発され、満足なレベルまで熟成されないといけない。また、Mixed-Signalの検証に合うように形式手法も作りなおされる必要がある。以下では、これらの課題について述べる。


Mixed-Signal Simulation as the Fundation for Verification
--------------------------------------------------------------------

  * アナログの検証では、形式検証やエミュレーション、ハードウェアアクセラレーションは、まだまだ十分なレベルではない。そのため、Mixed-Signalの検証では、シミュレーションベースの動的な検証手法に頼らざるを得ない。これらの手法に共通している点は、コ・シミュレーションを使用するか、シングルカーネルのシミュレータを使用するか、ということである。コ・シミュレーションは、2つのネットリストを用い、それぞれを別の(UNIX上では、別々のプロセスが走る)シミュレータにより解析し、それぞれのエンジンはIPC(プロセス間通信)により通信される。それに対して、シングルカーネルシミュレータは、UNIX上で一つのプロセスとして実行され、より高度な同期機構と効率的なデータ交換により、エンジン/アルゴリズム間のデータ受け渡しを可能にしたものである。

  * 設計者は、抽象度の高いレベル(Mathworks社のMATLABを使用することが多い)から、HDLとSPICEを組み合わせた低いレベルまで、様々なレベルを組み合わせてシミュレーションを行うことができる。各ブロックは、抽象度の高いレベル(例えば、WrealベースのVerilogモデル)や中間のレベル(Verilog-AMSモジュール)、低いレベル(回路図から生成されたSPICEネットリスト)でモデル化される。検証の際は、各抽象度のモデルを組み合わせてたり、ミックスさせたり、また市松模様のように絡み合わせることができる。様々な抽象度を使い分けることで、フォーカスするシミュレーションのターゲットを切り替えることができる。例えば、ブロックレベルに注目したり、レーンベースでシミュレーションを行ったり、マクロ単位や最後はフルチップのシミュレーションも可能である。抽象度を組み合わせた検証を行うことで、機能の確認や性能がスペックを満たしているかどうかの確認が可能となる。

  * Mixed-Signalのシミュレーション技術は、今後、高速なイベントドリブン/システムレベルの手法(両方とのデジタル部の解析手法)と、遅いが高精度なアナログのアプローチの融合を模索することになるだろう。アナログシミュレーションのアプローチは、常微分方程式の構築と解の探索に基づくものである。また、抽象度では、モデルベースとSPICEネットリストベースでモデル化する方法があり、どの抽象度でモデル化を行うかで、解くべき方程式の数が変わってくる。また、アナログの機能モデルを記述する際に、効率的にシミュレーションすることを考慮しないで記述した場合、SPICEベースのモデルとほとんど同じSim時間になることがある(それでも、遅くなることはないが)。また、リントツールやモデル作成支援ツールが急速に広まりつつあるので、より効率的にモデルの記述が可能となっている。


Design Partitioning, Simulation Planning, Regressions
--------------------------------------------------------------------

  * トップダウン設計を実現するためには、計画を重視することと、モデルのスループット(シミュレーション?)を上げることが必要である。トップダウン設計の中心になる考え方は、カバレッジ率とシミュレーションスピードを両立した楽観的な検証ストラテジを見つけることである。設計の仕様書から、どのブロックを高抽象度のモデルにすべきか、また、どのブロックをトランジスタレベルで検証すべきか、を見つけることができる。そこには、設計ブロックの分割とシミュレーション計画が中心的な考えとなる。また、プロジェクトの開始段階で、設計が安定なシステムになることは、ほとんどないため、シミュレーション計画を構築する際には、レグレッションテストについても考慮する必要がる。

  * 検証プランの構築には、通常動的な検証手法が用いられるが、検証ツールが必要十分なカバレッジを達成できるように、綿密な検証プランを作成する必要がある。ここでいう、検証プランは、実装のためのプランとは異なる。デジタル/SoCの設計チームでは、このようなプランを作成するために、専用の検証プランニングツールが用いられる。すなわち、検証プランは、実装のプラン(実際のテストベンチ)と共に開発される。デジタルの検証ツールでは、シミュレーション結果から、実装プランと目標の検証プランを比較することで、どの程度カバレッジが達成できたかのレポートを生成することができる。

  * 典型的には、アナログ部の検証プランの作成には、スプレッドシートが用いられるなど、デジタルよりもアドホックなものである。しかしながら、スプレッドシートでは、実際のシミュレーション結果からプランに対して、自動的に結果を反映させることができない。Mixed-Signal向けの検証ツールでは、ブロックごとにどの抽象度のモデルを用いるか、デザインをどのように分割するか、どうやってシミュレーションを走らせるか、を選択できるようなツールになっている必要がある。現状では、このようなツールがないため、ギャップを埋めるために、ユーザがそれぞれのスクリプトを用いている。今後は、UVM-MSのような手法を導入して、デジタルの高度な検証をアナログ/Mixed-Signalにも適用していかなければならない。


Assertion-based Verification
--------------------------------------------------------------------

  * 複数の言語やツールでアサーションがデジタル回路の複雑な状態空間を扱えるようになったため、デジタル設計・検証ともに、アサーションベース検証が広く用いられるようになった。PSLやSVAがVerilog-AMSやWrealベースのVerilogで使用できるようになれば、Mixed-Signalの設計者にもアサーションベース設計が利用できるようになる。現在、それぞれの標準化団体によって、この拡張が行われている。UVM-MSでは、今やアナログ信号値に対してのモニタリング機構やチェック機構がサポートされており、標準的なものになりつつある。いくつかのベンダでは、Verilog-AMSに電圧値のようなアナログ信号を取り扱えるようにしたPSLとSVAをサポートしつつある。

  * アサーションは、仕様の確認と設計の確からしさの両面を実行時に確認することができる。すなわち、実行時には、エラー発生箇所に近いところに配置したモニタの機能を持ち、エラー情報とカバレッジ情報の両方を出力することができる。アサーションを使用することで、検証を早くスタートすることができ、また、設計エンジニアと検証エンジニアがバグを早く検出し、取り除くことができる。また、設計者は設計意図をコードに埋め込むことで、後の統合工程での問題を最小化することができる。Mixed-Signalの設計と検証において、下記のメリットを取り込むことで、アサーションのメリットを享受することができる。

    * アサーションにより設計意図をデザインに組み込むことができる。
    * バグの近くで、アサーションを発火させられることができるので、バグの特定と除去が速くなる。
    * ファンクションカバレッジの取得が可能になる。

  * これからMixed-Signalの設計はより複雑になってくるため、アサーションベース設計は、ピュアなデジタル設計よりもますます重要となる。


Coverage Measurements
--------------------------------------------------------------------

  * アサーションは、メトリックドリブンのアプローチを行うときに、カバレッジを測定するポイント(coverpoints)としても使用される。すなわち、チェックすべきポイントをアサーションで記述しておき、これが、カバレッジツールによって、満たしたかどうかチェックされる。また、これ以外にも、ファンクショナル・ラインカバレッジも使用される。これらのアプローチは、既にデジタル回路の検証の世界で活用されているものであり、今後は、Mixed-Signalおよびアナログに拡張される。

  * しかしながら、従来の離散的な状態を扱うカバレッジの方式では、連続な値を持つアナログの問題には、そのままでは適用できない。典型的な例として、あるアナログノードの電圧を検証する例を取り上げよう。もし、連続的な期待値が与えられた場合、連続的な値を離散値に変換する処理が必要となる。現在、SystemVerilogのカバレッジ定義では、アナログの連続値を、有限の式かもしくは離散的なカバーポイントに変換するようなcoverpointsを導入することを検討している。IEEEの標準となっているe言語では、既に同様の拡張が行われており、いくつかのツールで使用可能な状態になっている。UVM-MSによるメトリックドリブンな検証環境を作るためには、連続的なcoverpointsを用いたアサーションや離散化されたcovergroupsを用いた方法によるカバレッジ測定の確立が不可欠である。


Mixed-Signal Metric-Driven Verification
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * UVMは、ますます複雑化するデジタル検証のために使用されているものである。メトリックドリブン手法には、カバレッジ測定のためのランダム入力パターン生成や複数の検証言語のサポートが必要となる。また、UVMは開発の効率性を向上させるために、モジュール～チップ間、プロジェクト間で再利用を容易にする仕組みも持っている。もし、UVMがMixed-Signalに拡張され、UVM-MSが完成すると、これらの特性がアナログの検証でも使用可能となる。UMVの拡張は、アナログブロックに対しての検証プラン、アナログ入力信号生成、アナログプロパティの検証とアサート、アナログファンクショナルカバレッジの解析、に対して行われる。UVM-MSは、高抽象度なモデル(すなわち、WrealベースのVerilogモデルで記述されたRNM)を使用したアナログ回路をターゲットにしている。

  * 自動化と特性の管理のためには、各々の検証プランを実行し、追跡するために、バッチ実行とレグレッション検証環境が必要となる。このデジタルの検証手法は、IPレベルでもチップレベルでも用いられている。IPレベルで、アナログ回路がモデル化されると共に、検証環境と検証プランが作成される。UVMは、AMSモデルやSPICEネットリストに対しても適用可能であるが、やはり、ベストなパフォーマンスを出すために、RNMでモデル化されるべきである。IPレベルで作られたテストプラン・モデル・検証環境は、SoCレベルで再利用され、デジタル・アナログによらず、統一的なMDVが適用される。


Verifying Low-Power Intent in MS design
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

  * ここ数年、低消費電力への要求が多数の技術開発を推進してきた。例として、パワーシャットオフ技術(PSO, これは、パワーゲーティングとも呼ばれる)、多電源供給技術(MSV)、可変電圧可変周波数技術(DVFS)などである。これらの技術は、デジタル回路では既に用いられている。しかしながら、この技術は、純粋なデジタル技術だけで適用されるものではなく、Mixed-Signal回路にも適用可能なものである。このような電源の記述には、CPFやUPFなどの標準化されたフォーマットが用いられる。既に、EDAツールはCPF/UPFをサポートしており、今後は、Mixed-Signalへの適用のが主な課題となる。回路図が中心の世界(アナログブロックはたいていがそうである)では、電源の指定が暗黙的に回路図中に指定されることになる。Mixed-Signalの回路において、暗黙的に電源指定を行うことができるようになると、大規模なSoCの設計や検証でも利用できるようになる。設計された回路図から、CPFのような標準化されたフォーマットでパワー情報を抽出するツールがあれば、次には、デジタルブロックのパワー情報とどうやって結合させるか、さらに、パワー試行のシミュレーションでどのように使用するか、といったことが課題となる。

  * 最近のMixed-Signalの検証ツールでは、アナログとデジタルをそれぞれ別のコアでシミュレーションを行い、電圧レベルや電源シャットオフ情報、状態復帰の情報をプロセス間で通信して、シミュレーションを進める方法が主流である。これは、時間変動するクオンティティや状態をシミュレータ間で受け渡せるようにするためである。これを可能にする技術は、パワーを交換するためのコネクタ素子(この素子は、デジタルとアナログの境界に配置される)である。これらのコネクタはCPFの記述に従い、自動的にパワー情報を交換し、この情報をイベントドリブンシミュレータ(デジタル)と回路シミュレータ(アナログ)のエンジンに受け渡す。このコネクタの作用により、アナログシミュレータは、隣接しているデジタルブロックの電源のレベルと状態を知ることができる。また、デジタルエンジンにも同様に隣接しているアナログ回路の状態が伝わる。この技術により、レベルシフタの挿入ミスや、多電源の接続ミスなどの根本的な不具合を検出することができる。
